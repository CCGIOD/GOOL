##---------------------
##  This is a velocity template file for printing out Android classes
##  See http://velocity.apache.org/engine/releases/velocity-1.5/user-guide.html
##  Velocity Note:
##  - Velocity instructions begin with a single #
##  - Comments with a double #
##  - The $ are references and get replaced.
##  - The rest prints out directly.                          
##---------------------
##
## Load up some velocity macros. 
## (Velocity Note: the parse command inserts another template.)
#parse($macros)
##
## Print out the platform as comment. 
## (Velocity Note: the .Platform is short for .getPlatform().)
// Platform: $class.Platform

## Print out the package when there is one
#if($class.Ppackage)package ${class.PackageName};#end

## Print out the imports
#includes ($Helper.printDependencies($class))

## Declare the class with the format: 
## [modifiers] interface/class [extends ...] [implements ...]
#join($class.Modifiers " ") #if($class.isInterface()) interface#else class#end $class.Name #if($class.ParentClass)extends $class.ParentClass#end#interfaces($class.Interfaces) {

## Declare its fields
#foreach( $field in $class.Fields )
## The following will call field.toString() 
## which will trigger JavaGenerator.getCode(field)
## which will generate the code for the field declaration and initialization.
    $field;
#end

## Declare its methods
#foreach( $method in $class.Methods )
    ${method.Header}#if($class.isInterface());#else {
#if($method.isConstructor)
	#foreach( $parentCall in $method.ParentCalls )
		$parentCall
	#end
#end        
        ${method.Block}
    }#end

#end
}