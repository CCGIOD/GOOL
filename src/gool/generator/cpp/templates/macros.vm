## Velocity templates for writing out diverse things C++
#macro ( includes $dependencies )
#foreach( $dep in $dependencies )#if(!$dep.equals("noprint"))\#include "${dep}"
#end#end#end
##Standard inclusion of iostream to every CPP program
#\#include<iostream>
##
## -----------
##
#macro( params $params )
#set( $paramsNb = $params.size() )
#foreach( $p in $params )$p.Type $p.Name#if($velocityCount != $paramsNb), #end#end
#end
#macro ( block $block )
#foreach( $stmt in $block.Statements )$stmt;
#end
 
#end
##
## -----------
##
#macro (interfaces $interfaces)
#set( $size = $interfaces.size() )
#if ($size > 0) #foreach( $interface in $interfaces )public $interface.toString().replaceAll("[ *]*$", "")#if($velocityCount != $size), #end#end#end
#end
##
## -----------
##
#macro (join $collection $separator)
#set( $size = $collection.size() )
#foreach( $item in $collection )$item#if($velocityCount != $size)$separator #end#end
#end
##
## -----------
##