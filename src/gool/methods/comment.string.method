charAtIndex			=	Returns the char value at the specified index.
unicodeAtIndex		=	Returns the character (Unicode code point) at the specified index.
compareWithCase		=	Compares two strings lexicographically.
compareWithoutCase	=	Compares two strings lexicographically, ignoring case differences.
concatenation		=	Concatenates the specified string to the end of this string.
contains			=	Returns true if and only if this string contains the specified sequence of char values.
copy				=	Returns a String that represents the character sequence in the array specified.
endSuffixe			=	Tests if this string ends with the specified suffix.
equalWithCase		=	Compares this string to the specified object.
equalWithoutCase	=	Compares this String to another String, ignoring case considerations.
withFormat			=	Returns a formatted string using the specified format string and arguments.
toByte				=	Encodes this String into a sequence of bytes using the platform's default charset, storing the result into a new byte array.
toByteWithCharSet	=	Encodes this String into a sequence of bytes using the named charset, storing the result into a new byte array.
firstIndexChar		=	Returns the index within this string of the first occurrence of the specified character.
firstIndexCharFrom	=	Returns the index within this string of the first occurrence of the specified character, starting the search at the specified index.
firstIndexStr		=	Returns the index within this string of the first occurrence of the specified substring.
firstIndexStrFrom	=	Returns the index within this string of the first occurrence of the specified substring, starting at the specified index.
empty				=	Returns true if, and only if, length() is 0.
lastIndexChar		=	Returns the index within this string of the last occurrence of the specified character.
lastIndexCharFrom	=	Returns the index within this string of the last occurrence of the specified character, searching backward starting at the specified index.
lastIndexStr		=	Returns the index within this string of the rightmost occurrence of the specified substring.
lastIndexStrFrom	=	Returns the index within this string of the last occurrence of the specified substring, searching backward starting at the specified index.
lenght				=	Returns the length of this string.
matchesWithRegex	=	Tells whether or not this string matches the given regular expression.
matchesRegionCase	=	Tests if two string regions are equal.
matchesRegion		=	Tests if two string regions are equal.
replaceChar			=	Returns a new string resulting from replacing all occurrences of oldChar in this string with newChar.
replaceString		=	Replaces each substring of this string that matches the literal target sequence with the specified literal replacement sequence.
replaceregex		=	Replaces each substring of this string that matches the given regular expression with the given replacement.
startPrefixe		=	Tests if this string starts with the specified prefix.
subStr				=	Returns a new string that is a substring of this string.
subStrWithEnd		=	Returns a new string that is a substring of this string.
toChars				=	Converts this string to a new character array.
lowerCase			=	Converts all of the characters in this String to lower case using the rules of the default locale.
upperCase			=	Converts all of the characters in this String to upper case using the rules of the default locale.
valueOfBool			=	Returns the string representation of the boolean argument.
valueOfChar			=	Returns the string representation of the char argument.
valueOfCharArray	=	Returns the string representation of the char array argument.
valueOfDouble		=	Returns the string representation of the double argument.
valueOfFloat		=	Returns the string representation of the float argument.
valueOfInt			=	Returns the string representation of the int argument.
valueOfLong			=	Returns the string representation of the long argument.
valueOfObject		=	Returns the string representation of the object argument.