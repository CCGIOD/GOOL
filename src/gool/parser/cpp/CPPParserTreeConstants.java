/* Generated By:JavaCC: Do not edit this line. CPPParserTreeConstants.java Version 5.0 */
package gool.parser.cpp;

public interface CPPParserTreeConstants
{
  public int JJTTRANSLATION_UNIT = 0;
  public int JJTEXTERNAL_DECLARATION = 1;
  public int JJTINCLUDE_SPECIFER = 2;
  public int JJTFUNCTION_DEFINITION = 3;
  public int JJTFUNC_DECL_DEF = 4;
  public int JJTLINKAGE_SPECIFICATION = 5;
  public int JJTDECLARATION = 6;
  public int JJTTYPE_MODIFIERS = 7;
  public int JJTDECLARATION_SPECIFIERS = 8;
  public int JJTSIMPLE_TYPE_SPECIFIER = 9;
  public int JJTSCOPE_OVERRIDE_LOOKAHEAD = 10;
  public int JJTSCOPE_OVERRIDE = 11;
  public int JJTQUALIFIED_ID = 12;
  public int JJTPTR_TO_MEMBER = 13;
  public int JJTQUALIFIED_TYPE = 14;
  public int JJTTYPE_QUALIFIER = 15;
  public int JJTSTORAGE_CLASS_SPECIFIER = 16;
  public int JJTBUILTIN_TYPE_SPECIFIER = 17;
  public int JJTINIT_DECLARATOR_LIST = 18;
  public int JJTINIT_DECLARATOR = 19;
  public int JJTCLASS_HEAD = 20;
  public int JJTCLASS_SPECIFIER = 21;
  public int JJTBASE_CLAUSE = 22;
  public int JJTBASE_SPECIFIER = 23;
  public int JJTACCESS_SPECIFIER = 24;
  public int JJTMEMBER_DECLARATION = 25;
  public int JJTMEMBER_DECLARATOR_LIST = 26;
  public int JJTMEMBER_DECLARATOR = 27;
  public int JJTCONVERSION_FUNCTION_DECL_OR_DEF = 28;
  public int JJTENUM_SPECIFIER = 29;
  public int JJTENUMERATOR_LIST = 30;
  public int JJTENUMERATOR = 31;
  public int JJTPTR_OPERATOR = 32;
  public int JJTCV_QUALIFIER_SEQ = 33;
  public int JJTDECLARATOR = 34;
  public int JJTDIRECT_DECLARATOR = 35;
  public int JJTDECLARATOR_SUFFIXES = 36;
  public int JJTFUNCTION_DECLARATOR_LOOKAHEAD = 37;
  public int JJTFUNCTION_DECLARATOR = 38;
  public int JJTFUNCTION_DIRECT_DECLARATOR = 39;
  public int JJTDTOR_CTOR_DECL_SPEC = 40;
  public int JJTDTOR_DEFINITION = 41;
  public int JJTCTOR_DEFINITION = 42;
  public int JJTCTOR_DECLARATOR_LOOKAHEAD = 43;
  public int JJTCTOR_DECLARATOR = 44;
  public int JJTCTOR_INITIALIZER = 45;
  public int JJTSUPERCLASS_INIT = 46;
  public int JJTDTOR_DECLARATOR = 47;
  public int JJTSIMPLE_DTOR_DECLARATOR = 48;
  public int JJTPARAMETER_LIST = 49;
  public int JJTPARAMETER_DECLARATION_LIST = 50;
  public int JJTPARAMETER_DECLARATION = 51;
  public int JJTINITIALIZER = 52;
  public int JJTTYPE_NAME = 53;
  public int JJTABSTRACT_DECLARATOR = 54;
  public int JJTABSTRACT_DECLARATOR_SUFFIX = 55;
  public int JJTTEMPLATE_HEAD = 56;
  public int JJTTEMPLATE_PARAMETER_LIST = 57;
  public int JJTTEMPLATE_PARAMETER = 58;
  public int JJTTEMPLATE_ID = 59;
  public int JJTTEMPLATE_ARGUMENT_LIST = 60;
  public int JJTTEMPLATE_ARGUMENT = 61;
  public int JJTSTATEMENT_LIST = 62;
  public int JJTSTATEMENT = 63;
  public int JJTLABELED_STATEMENT = 64;
  public int JJTCOMPOUND_STATEMENT = 65;
  public int JJTSELECTION_STATEMENT = 66;
  public int JJTITERATION_STATEMENT = 67;
  public int JJTJUMP_STATEMENT = 68;
  public int JJTTRY_BLOCK = 69;
  public int JJTHANDLER = 70;
  public int JJTEXCEPTION_DECLARATION = 71;
  public int JJTTHROW_STATEMENT = 72;
  public int JJTEXPRESSION = 73;
  public int JJTASSIGNMENT_EXPRESSION = 74;
  public int JJTCONDITIONAL_EXPRESSION = 75;
  public int JJTCONSTANT_EXPRESSION = 76;
  public int JJTLOGICAL_OR_EXPRESSION = 77;
  public int JJTLOGICAL_AND_EXPRESSION = 78;
  public int JJTINCLUSIVE_OR_EXPRESSION = 79;
  public int JJTEXCLUSIVE_OR_EXPRESSION = 80;
  public int JJTAND_EXPRESSION = 81;
  public int JJTEQUALITY_EXPRESSION = 82;
  public int JJTRELATIONAL_EXPRESSION = 83;
  public int JJTSHIFT_EXPRESSION = 84;
  public int JJTADDITIVE_EXPRESSION = 85;
  public int JJTMULTIPLICATIVE_EXPRESSION = 86;
  public int JJTPM_EXPRESSION = 87;
  public int JJTCAST_EXPRESSION = 88;
  public int JJTUNARY_EXPRESSION = 89;
  public int JJTNEW_EXPRESSION = 90;
  public int JJTNEW_TYPE_ID = 91;
  public int JJTNEW_DECLARATOR = 92;
  public int JJTDIRECT_NEW_DECLARATOR = 93;
  public int JJTNEW_INITIALIZER = 94;
  public int JJTDELETE_EXPRESSION = 95;
  public int JJTUNARY_OPERATOR = 96;
  public int JJTPOSTFIX_EXPRESSION = 97;
  public int JJTID_EXPRESSION = 98;
  public int JJTPRIMARY_EXPRESSION = 99;
  public int JJTEXPRESSION_LIST = 100;
  public int JJTCONSTANT = 101;
  public int JJTOPTOR = 102;
  public int JJTEXCEPTION_SPEC = 103;
  public int JJTEXCEPTION_LIST = 104;


  public String[] jjtNodeName = {
    "TRANSLATION_UNIT",
    "EXTERNAL_DECLARATION",
    "INCLUDE_SPECIFER",
    "FUNCTION_DEFINITION",
    "FUNC_DECL_DEF",
    "LINKAGE_SPECIFICATION",
    "DECLARATION",
    "TYPE_MODIFIERS",
    "DECLARATION_SPECIFIERS",
    "SIMPLE_TYPE_SPECIFIER",
    "SCOPE_OVERRIDE_LOOKAHEAD",
    "SCOPE_OVERRIDE",
    "QUALIFIED_ID",
    "PTR_TO_MEMBER",
    "QUALIFIED_TYPE",
    "TYPE_QUALIFIER",
    "STORAGE_CLASS_SPECIFIER",
    "BUILTIN_TYPE_SPECIFIER",
    "INIT_DECLARATOR_LIST",
    "INIT_DECLARATOR",
    "CLASS_HEAD",
    "CLASS_SPECIFIER",
    "BASE_CLAUSE",
    "BASE_SPECIFIER",
    "ACCESS_SPECIFIER",
    "MEMBER_DECLARATION",
    "MEMBER_DECLARATOR_LIST",
    "MEMBER_DECLARATOR",
    "CONVERSION_FUNCTION_DECL_OR_DEF",
    "ENUM_SPECIFIER",
    "ENUMERATOR_LIST",
    "ENUMERATOR",
    "PTR_OPERATOR",
    "CV_QUALIFIER_SEQ",
    "DECLARATOR",
    "DIRECT_DECLARATOR",
    "DECLARATOR_SUFFIXES",
    "FUNCTION_DECLARATOR_LOOKAHEAD",
    "FUNCTION_DECLARATOR",
    "FUNCTION_DIRECT_DECLARATOR",
    "DTOR_CTOR_DECL_SPEC",
    "DTOR_DEFINITION",
    "CTOR_DEFINITION",
    "CTOR_DECLARATOR_LOOKAHEAD",
    "CTOR_DECLARATOR",
    "CTOR_INITIALIZER",
    "SUPERCLASS_INIT",
    "DTOR_DECLARATOR",
    "SIMPLE_DTOR_DECLARATOR",
    "PARAMETER_LIST",
    "PARAMETER_DECLARATION_LIST",
    "PARAMETER_DECLARATION",
    "INITIALIZER",
    "TYPE_NAME",
    "ABSTRACT_DECLARATOR",
    "ABSTRACT_DECLARATOR_SUFFIX",
    "TEMPLATE_HEAD",
    "TEMPLATE_PARAMETER_LIST",
    "TEMPLATE_PARAMETER",
    "TEMPLATE_ID",
    "TEMPLATE_ARGUMENT_LIST",
    "TEMPLATE_ARGUMENT",
    "STATEMENT_LIST",
    "STATEMENT",
    "LABELED_STATEMENT",
    "COMPOUND_STATEMENT",
    "SELECTION_STATEMENT",
    "ITERATION_STATEMENT",
    "JUMP_STATEMENT",
    "TRY_BLOCK",
    "HANDLER",
    "EXCEPTION_DECLARATION",
    "THROW_STATEMENT",
    "EXPRESSION",
    "ASSIGNMENT_EXPRESSION",
    "CONDITIONAL_EXPRESSION",
    "CONSTANT_EXPRESSION",
    "LOGICAL_OR_EXPRESSION",
    "LOGICAL_AND_EXPRESSION",
    "INCLUSIVE_OR_EXPRESSION",
    "EXCLUSIVE_OR_EXPRESSION",
    "AND_EXPRESSION",
    "EQUALITY_EXPRESSION",
    "RELATIONAL_EXPRESSION",
    "SHIFT_EXPRESSION",
    "ADDITIVE_EXPRESSION",
    "MULTIPLICATIVE_EXPRESSION",
    "PM_EXPRESSION",
    "CAST_EXPRESSION",
    "UNARY_EXPRESSION",
    "NEW_EXPRESSION",
    "NEW_TYPE_ID",
    "NEW_DECLARATOR",
    "DIRECT_NEW_DECLARATOR",
    "NEW_INITIALIZER",
    "DELETE_EXPRESSION",
    "UNARY_OPERATOR",
    "POSTFIX_EXPRESSION",
    "ID_EXPRESSION",
    "PRIMARY_EXPRESSION",
    "EXPRESSION_LIST",
    "CONSTANT",
    "OPTOR",
    "EXCEPTION_SPEC",
    "EXCEPTION_LIST",
  };
}
/* JavaCC - OriginalChecksum=cc74232e150e6ef979d1236aad482831 (do not edit this line) */
